# Copyright 2021 The Vitess Authors.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#    http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: Set sysbench dependencies
  set_fact:
    sysbench_dependencies:
      - make
      - automake
      - libtool
      - pkgconfig
      - libaio-devel
      - mysql-devel
      - openssl-devel
      - git

- name: Install sysbench dependencies
  become: yes
  become_user: root
  package:
    name: '{{ sysbench_dependencies }}'
    state: present
    update_cache: true
  register: task_result
  until: task_result is succeeded

- name: Update Sysbench
  become: yes
  become_user: root
  git:
    repo: https://github.com/planetscale/sysbench
    dest: /src/sysbench
    version: master
    depth: 1
    force: 1

- name: Build sysbench
  become: yes
  become_user: root
  shell: |
    cd /src/sysbench
    ./autogen.sh
    ./configure
    make -j
    make install
  changed_when: false

- name: Get tpcc
  become: yes
  become_user: root
  git:
    repo: https://github.com/planetscale/sysbench-tpcc
    dest: /src/sysbench-tpcc
    version: master
    depth: 1
    force: 1

- name: Install iptables
  package:
    name: 'iptables'
    state: present
    update_cache: true

- name: Set up Masquerading
  shell: |
    iptables -t nat -A POSTROUTING -j MASQUERADE
    sysctl -w net.ipv4.conf.lo.route_localnet=1
  changed_when: false

- name: Flush all rules
  shell: |
    iptables -t nat -F OUTPUT
  changed_when: false

- name: Set up VTGate Loadbalancing
  shell: iptables -t nat -A OUTPUT -p tcp --dport 3306 -m state --state NEW -m statistic --mode nth --every {{ ((gateways | length) - index) }} --packet 0 -j DNAT --to-destination {{ gateway }}
  with_items: '{{ gateways }}'
  changed_when: false
  loop_control:
    loop_var: gateway
    index_var: index